version: '3.9'

volumes:
  mysql:


networks:
  reverse-proxy-public:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.0.0/24 # subnet for traefik and other services

services:
  proxy:
    image: traefik
    command:
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker"
      - "--api.insecure=true"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt
    networks:
      reverse-proxy-public:
        ipv4_address: 172.16.0.10 # static IP

  db:
    image: mysql:latest
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
    volumes:
      - mysql:/var/lib/mysql
    depends_on:
      - proxy
    networks:
      reverse-proxy-public:
        ipv4_address: 172.16.0.11 # static IP

  api:
    restart: always
    env_file:
      - .env
    environment:
      DB_URL: "mysql+pymysql://root:${MYSQL_ROOT_PASSWORD}@db:3306/${MYSQL_DATABASE}?charset=utf8mb4"
      TEST_DB_URL: "mysql+pymysql://root:${MYSQL_ROOT_PASSWORD}@db:3306/${MYSQL_TEST_DATABASE}?charset=utf8mb4"
    build: .
    depends_on:
      - proxy
      - db
    labels:
      - "traefik.http.routers.api.rule=HOST(`localhost`, `192.168.0.3`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.services.api.loadbalancer.server.scheme=http"
      - "traefik.http.services.api.loadbalancer.server.port=8000"
    volumes:
      - .:/app
    networks:
      reverse-proxy-public:
        ipv4_address: 172.16.0.12 # static IP
